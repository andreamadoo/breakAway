@model BreakAway.Models.Contact.EditViewModel

@{
    ViewBag.Title = "Edit";
}
@Html.ActionLink("Back to contact list", "Index")


@if (!string.IsNullOrEmpty(ViewBag.message))
{
    <p style="font-style:italic">@ViewBag.message</p>
}


@*PROBLEM WITH INDEXES ITS DELETING THE LAST ALWAYS*@




@using (Html.BeginForm())
{
    @Html.HiddenFor(p => p.Id);
    @Html.AntiForgeryToken();
    <fieldset>
        <legend>Contact Information</legend>
        <div>
            @Html.LabelFor(p => p.FirstName, labelText: "First name:")
            @Html.TextBoxFor(p => p.FirstName)
        </div>
        <div>
            @Html.LabelFor(p => p.LastName, labelText: "Last name:")
            @Html.TextBoxFor(p => p.LastName)
        </div>
        <div>
            @Html.LabelFor(p => p.AddDate, labelText: "Add Date:")
            @Html.TextBoxFor(p => p.AddDate)
        </div>
        <div class="form">
            @for (var i = 0; i < Model.Addresses.Count; i++)
            {
                var address = Model.Addresses[i];

            <div id="@(i)" class="wrap-div">

                <input type="hidden" name="Addresses.Index" value="@i" />  
                <input type="hidden" name="Addresses[@i].Id" value="@address.Id" class="id" />
                <div class="wrap-address-type">
                    <label for="Addresses[@i].AddressType">Address Type :</label>
                    <input type="text" name="Addresses[@i].AddressType" value="@address.AddressType" class="address-type" />
                </div>
                <div class="wrap-address-street1">
                    <label for="Addresses[@i].Street1">Street 1 :</label>
                    <input type="text" name="Addresses[@i].Street1" value="@address.Street1"  class="street1" />
                </div>
                <div class="wrap-address-street2">
                    <label for="Addresses[@i].Street2">Street 2 :</label>
                    <input type="text" name="Addresses[@i].Street2" value="@address.Street2"  class="street2" />
                </div>
                <div class="wrap-city">
                    <label for="Addresses[@i].City">City :</label>
                    <input type="text" name="Addresses[@i].City" value="@address.City"  class="city" />
                </div>

                <div class="wrap-state-province">
                    <label for="Addresses[@i].StateProvince">State Province :</label>
                    <input type="text" name="Addresses[@i].StateProvince" value="@address.StateProvince"  class="stateprovince" />
                </div>
                <div class="wrap-postal-code">
                    <label for="Addresses[@i].PostalCode">Postal Code :</label>
                    <input type="text" name="Addresses[@i].PostalCode" value="@address.PostalCode" class="postalcode" />
                </div>
                <div class="wrap-country-region">
                    <label for="Addresses[@i].CountryRegion">Country Region :</label>
                    <input type="text" name="Addresses[@i].CountryRegion" value="@address.CountryRegion" class="countryregion" />
                </div>

                <div class="wrap-delete-button">
                    <input type="button" name="delete" value="Delete this Address &#8593" class="delete-button" onclick="removeAddress(@(i))" />
                </div>
            </div>

            }




        </div>

        <div>
            <input id="button" name="button" type="button" value="Add Address" onclick="addAddress()" />
            <div id="fields"></div>
        </div>


    </fieldset>


    <input type="submit" value="Save" />
}

<script src="//ajax.googleapis.com/ajax/libs/jquery/1.11.0/jquery.min.js"></script>
<script type="text/javascript">

    function addAddress() {

        var elements = document.getElementsByClassName("address-type")
        var count = new Date().getTime();
        var upArrow = '\u2191';

        
        var newAddressTypeLabel = document.createElement("label")
        var newStreet1Label = document.createElement("label")
        var newStreet2Label = document.createElement("label")
        var newCityLabel = document.createElement("label")
        var newStateProvinceLabel = document.createElement("label")
        var newPostalCodeLabel = document.createElement("label")
        var newCountryRegionLabel = document.createElement("label")

        var newAddressIndexInput = document.createElement("input")
        var newAddressIdInput = document.createElement("input")
        var newAddressTypeInput = document.createElement("input")
        var newStreet1Input = document.createElement("input")
        var newStreet2Input = document.createElement("input")
        var newCityInput = document.createElement("input")
        var newStateProvinceInput = document.createElement("input")
        var newPostalCodeInput = document.createElement("input")
        var newCountryRegionInput = document.createElement("input")
        var newButtonDeleteInput = document.createElement("input")
        var innerDiv = document.createElement("div")
        var wrapAddressType = document.createElement("div")
        var wrapStreet1 = document.createElement("div")
        var wrapStreet2 = document.createElement("div")
        var wrapCity = document.createElement("div")
        var wrapStateProvince = document.createElement("div")
        var wrapPostalCode = document.createElement("div")
        var wrapCountryRegion = document.createElement("div")
        var wrapDeleteButton = document.createElement("div")


        newAddressTypeLabel.setAttribute("for", "Addresses[ " + count + "].AddressType")
        newStreet1Label.setAttribute("for", "Addresses[ " + count + "].Street1")
        newStreet2Label.setAttribute("for", "Addresses[" + count + "].Street2")
        newCityLabel.setAttribute("for", "Addresses[" + count + "].City")
        newStateProvinceLabel.setAttribute("for", "Addresses[" + count + "].StateProvince")
        newPostalCodeLabel.setAttribute("for", "Addresses[" + count + "].PostalCode")
        newCountryRegionLabel.setAttribute("for", "Addresses[" + count + "].CountryRegion")

        newAddressTypeLabel.innerHTML = "Address Type :"
        newStreet1Label.innerHTML = "Street 1 :"
        newStreet2Label.innerHTML = "Street 2 :"
        newCityLabel.innerHTML = "City :"
        newStateProvinceLabel.innerHTML = "State Province :"
        newPostalCodeLabel.innerHTML = "Postal Code :"
        newCountryRegionLabel.innerHTML = "Country Region :"
        newButtonDeleteInput.innerHTML = "Delete"



        newAddressIdInput.setAttribute("class", "id")
        newAddressTypeInput.setAttribute("class", "address-type")
        newStreet1Input.setAttribute("class", "street1")
        newStreet2Input.setAttribute("class", "street2")
        newCityInput.setAttribute("class", "city")
        newStateProvinceInput.setAttribute("class", "stateprovince")
        newPostalCodeInput.setAttribute("class", "postalcode")
        newCountryRegionInput.setAttribute("class", "countryregion")
        newButtonDeleteInput.setAttribute("class", "delete-button")

        newAddressIndexInput.setAttribute("value", count)
        newAddressIndexInput.setAttribute("name", "Addresses.Index")
        newAddressIdInput.setAttribute("name", "Addresses[" + count + "].Id")
        newAddressTypeInput.setAttribute("name", "Addresses[" + count + "].AddressType")
        newStreet1Input.setAttribute("name", "Addresses[" + count + "].Street1")
        newStreet2Input.setAttribute("name", "Addresses[" + count + "].Street2")
        newCityInput.setAttribute("name", "Addresses[" + count + "].City")
        newStateProvinceInput.setAttribute("name", "Addresses[" + count + "].StateProvince")
        newPostalCodeInput.setAttribute("name", "Addresses[" + count + "].PostalCode")
        newCountryRegionInput.setAttribute("name", "Addresses[" + count + "].CountryRegion")
        newButtonDeleteInput.setAttribute("name", "delete")

        innerDiv.setAttribute("id", count)
        innerDiv.setAttribute("class", "wrap-div")
        wrapAddressType.setAttribute("class", "wrap-address-type")
        wrapStreet1.setAttribute("class", "wrap-address-street1")
        wrapStreet2.setAttribute("class", "wrap-address-street2")
        wrapCity.setAttribute("class", "wrap-city")
        wrapStateProvince.setAttribute("class", "wrap-state-province")
        wrapPostalCode.setAttribute("class", "wrap-postal-code")
        wrapCountryRegion.setAttribute("class", "wrap-country-region")
        wrapDeleteButton.setAttribute("class", "wrap-delete-button")

        newAddressIndexInput.setAttribute("type", "hidden")
        newAddressIdInput.setAttribute("type","hidden")
        newAddressTypeInput.setAttribute("type", "text")
        newStreet1Input.setAttribute("type", "text")
        newStreet2Input.setAttribute("type", "text")
        newCityInput.setAttribute("type", "text")
        newStateProvinceInput.setAttribute("type", "text")
        newPostalCodeInput.setAttribute("type", "text")
        newCountryRegionInput.setAttribute("type", "text")
        newButtonDeleteInput.setAttribute("type", "button")
        newButtonDeleteInput.setAttribute("value", "Delete this Address " + upArrow)
        newButtonDeleteInput.setAttribute("onclick", "removeAddress(" + count + " )" )


        document.getElementsByClassName("form")[0].appendChild(innerDiv)

        innerDiv.append(newAddressIndexInput)


        innerDiv.append(wrapAddressType)
        wrapAddressType.append(newAddressTypeLabel)
        wrapAddressType.append(newAddressTypeInput)

        innerDiv.append(wrapStreet1)
        wrapStreet1.append(newStreet1Label)
        wrapStreet1.append(newStreet1Input)

        innerDiv.append(wrapStreet2)
        wrapStreet2.append(newStreet2Label)
        wrapStreet2.append(newStreet2Input)

        innerDiv.append(wrapCity)
        wrapCity.append(newCityLabel)
        wrapCity.append(newCityInput)

        innerDiv.append(wrapStateProvince)
        wrapStateProvince.append(newStateProvinceLabel)
        wrapStateProvince.append(newStateProvinceInput)

        innerDiv.append(wrapPostalCode)
        wrapPostalCode.append(newPostalCodeLabel)
        wrapPostalCode.append(newPostalCodeInput)

        innerDiv.append(wrapCountryRegion)
        wrapCountryRegion.append(newCountryRegionLabel)
        wrapCountryRegion.append(newCountryRegionInput)


        innerDiv.append(wrapDeleteButton)
        wrapDeleteButton.append(newButtonDeleteInput)
        
        

    }


</script>

<script type="text/javascript">

    function removeAddress(id) {


        document.getElementById(id).remove();
   
   
        console.log(id);
       
    }

</script>